###############################################
# .env.example
# Plantilla con todas las variables soportadas
# Copiá este archivo a `.env` para desarrollo local
# o a `./docker/.env` para usar con docker compose.
###############################################

# =====================
# Django (básicos)
# =====================
DEBUG=true                                # true en desarrollo, false en producción
SECRET_KEY=django-insecure-change-me      # Cambiá esto en prod (clave secreta Django)
ALLOWED_HOSTS=localhost,127.0.0.1         # Hosts permitidos (coma-separado)
CSRF_TRUSTED_ORIGINS=http://localhost,http://127.0.0.1  # Orígenes confiables para CSRF

# =====================
# CORS (Frontends permitidos)
# =====================
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173

# =====================
# Proxy/SSL (cuando hay Nginx/Load Balancer por delante)
# En desarrollo normalmente no se necesitan.
# =====================
USE_X_FORWARDED_HOST=true
SECURE_PROXY_SSL_HEADER=x-forwarded-proto,https
SECURE_SSL_REDIRECT=false
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=false
SECURE_HSTS_PRELOAD=false

# =====================
# Base de datos
# =====================
# Por defecto (sin definir DATABASE_URL) se usa SQLite en desarrollo.
# Para usar Postgres (local o en producción), definí DATABASE_URL:
# DATABASE_URL=postgres://usuario:password@host:5432/nombre_db

# Tuning opcional (solo aplica si DATABASE_URL apunta a Postgres)
# DB_ATOMIC_REQUESTS=true                 # Envuelve cada request en una transacción
# DB_CONN_MAX_AGE=60                      # Conexiones persistentes (segundos)
# DB_SSL_REQUIRED=false                   # Fuerza SSL si true
# DB_SSLMODE=require                      # sslmode de psycopg2 (p.ej. require, verify-full)
# DB_CONNECT_TIMEOUT=5                    # Timeout de conexión (segundos)
# DB_STATEMENT_TIMEOUT=0                  # Timeout de sentencia (ms, 0 = sin límite)

# =====================
# Docker helpers (dev)
# =====================
# Puerto donde se expone la app en tu host en modo dev
# DEV_PORT=8000
# Puerto para exponer Postgres en dev (perfil pg)
# DEV_PG_PORT=5432

# Credenciales Postgres para los contenedores (dev/prod)
# Se usan para crear la DB del contenedor y para derivar DATABASE_URL automáticamente.
POSTGRES_DB=todo_db
POSTGRES_USER=todo_user
POSTGRES_PASSWORD=change_this

# =====================
# Superusuario automático (entrypoint en Docker)
# =====================
# DJANGO_CREATE_SUPERUSER=true            # Si true, intenta crear el superusuario en el arranque
# DJANGO_SUPERUSER_EMAIL=admin@example.com
# DJANGO_SUPERUSER_PASSWORD=change_this_admin_pw
# DJANGO_SUPERUSER_FIRST_NAME=Admin
# DJANGO_SUPERUSER_LAST_NAME=User

# =====================
# Nginx / TLS (stack de producción con proxy)
# =====================
SSL_DOMAIN=example.com                    # Dominio público
SSL_IP=0.0.0.0                            # IP pública (opcional)
NGINX_PORT_HTTP=80                        # Puerto HTTP externo
NGINX_PORT_HTTPS=443                      # Puerto HTTPS externo

# =====================
# Logging
# =====================
# Nivel de logs de la app (root): DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO
# Nivel de logs de acceso (línea por request)
ACCESS_LOG_LEVEL=INFO
# Formato del log de aplicación: simple (legible) o json_line (ideal para agregadores)
LOG_FORMATTER=simple
