services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    ports:
      - "${DEV_PORT:-8000}:8000"
    volumes:
      - ../src:/app/src
      - static_volume:/app/src/staticfiles
      - media_volume:/app/src/media
    depends_on: []
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.dev
      DJANGO_COLLECTSTATIC: "false"
      # Optional: enforce Postgres in dev (entrypoint will fail if POSTGRES_* missing)
      REQUIRE_POSTGRES: ${REQUIRE_POSTGRES:-}
      # If set, web will use Postgres instead of SQLite
      DATABASE_URL: ${DATABASE_URL:-}
    command: ["/bin/sh", "/app/docker/entrypoint.sh", "python", "manage.py", "runserver", "0.0.0.0:8000"]

  db:
    image: postgres:16-alpine
    profiles: ["pg"]
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DEV_PG_PORT:-5432}:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_volume:
  media_volume:
  pgdata_dev:
